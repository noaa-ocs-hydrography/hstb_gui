# -*- coding: iso-8859-15 -*-

#-----------------------------------------------------------------------------
# Python source generated by wxDesigner from file: DataDictionary.wdr
# Do not modify this file, all changes will be lost!
#-----------------------------------------------------------------------------

# Include wxPython modules
import wx
import wx.grid

# Window functions

ID_TEXT = 10000
ID_FORMATCHOICE = 10001
ID_PARSE = 10002
ID_FORMATTEXT = 10003
ID_DEFAULTVAL = 10004
ID_ADVANCEDTEXT = 10005
ID_SCRIPT = 10006
ID_OKBTN = 10007
ID_CANCELBTN = 10008

def TimeDialog( parent, call_fit = True, set_sizer = True ):
    item0 = wx.BoxSizer( wx.VERTICAL )
    
    item1 = wx.BoxSizer( wx.HORIZONTAL )
    
    item2 = wx.StaticText( parent, ID_TEXT, "Standard Formats", wx.DefaultPosition, wx.DefaultSize, 0 )
    item1.Add( item2, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item3 = wx.Choice( parent, ID_FORMATCHOICE, wx.DefaultPosition, [150,-1], 
        ["MO DAY YR h m s","MO DAY YR h m s AM","YR MO DAY h m s","YR MO DAY h m s AM","h m s YR MO DAY","h m s AM YR MO DAY","h m s MO DAY YR","h m s AM MO DAY YR","UTC80","YR DOY h m s","YR DOY s","s DOY YR","YYYYMMDD h m s","YYYYMMDD h m s AM","Custom","Regular Expression"] , 0 )
    item1.Add( item3, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item4 = wx.CheckBox( parent, ID_PARSE, "Use", wx.DefaultPosition, wx.DefaultSize, 0 )
    item4.SetToolTip( wx.ToolTip("Read data from file when checked (default value otherwise) ") )
    item1.Add( item4, 0, wx.ALIGN_CENTER|wx.LEFT, 40 )

    item0.Add( item1, 0, wx.ALIGN_CENTER_VERTICAL|wx.ALL, 5 )

    item5 = wx.BoxSizer( wx.HORIZONTAL )
    
    item6 = wx.StaticText( parent, ID_TEXT, "Custom Parsing Format", wx.DefaultPosition, wx.DefaultSize, 0 )
    item5.Add( item6, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item7 = wx.TextCtrl( parent, ID_FORMATTEXT, "", wx.DefaultPosition, [150,-1], 0 )
    item5.Add( item7, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item0.Add( item5, 0, wx.ALIGN_CENTER_VERTICAL|wx.ALL, 5 )

    item8 = wx.BoxSizer( wx.HORIZONTAL )
    
    item9 = wx.StaticText( parent, ID_TEXT, "Default Value", wx.DefaultPosition, wx.DefaultSize, 0 )
    item8.Add( item9, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item10 = wx.TextCtrl( parent, ID_DEFAULTVAL, "", wx.DefaultPosition, [200,-1], 0 )
    item10.SetToolTip( wx.ToolTip("Applys only if checkbox is cleared") )
    item8.Add( item10, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item0.Add( item8, 0, wx.ALIGN_CENTER_VERTICAL|wx.ALL, 5 )

    item11 = wx.BoxSizer( wx.HORIZONTAL )
    
    item12 = wx.StaticText( parent, ID_TEXT, 
        "Advanced\n"
        "Regular\n"
        "Expression\n"
        "",
        wx.DefaultPosition, wx.DefaultSize, 0 )
    item11.Add( item12, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item13 = wx.TextCtrl( parent, ID_ADVANCEDTEXT, "", wx.DefaultPosition, [300,60], wx.TE_MULTILINE )
    item11.Add( item13, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item0.Add( item11, 0, wx.ALIGN_CENTER_VERTICAL|wx.ALL, 5 )

    item14 = wx.BoxSizer( wx.HORIZONTAL )
    
    item15 = wx.StaticText( parent, ID_TEXT, "modifier script", wx.DefaultPosition, wx.DefaultSize, 0 )
    item14.Add( item15, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item16 = wx.TextCtrl( parent, ID_SCRIPT, "", wx.DefaultPosition, [260,80], wx.TE_MULTILINE|wx.TE_PROCESS_TAB|wx.HSCROLL )
    item14.Add( item16, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item0.Add( item14, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item17 = wx.BoxSizer( wx.HORIZONTAL )
    
    item18 = wx.Button( parent, ID_OKBTN, "OK", wx.DefaultPosition, wx.DefaultSize, 0 )
    item17.Add( item18, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item19 = wx.Button( parent, ID_CANCELBTN, "CANCEL", wx.DefaultPosition, wx.DefaultSize, 0 )
    item17.Add( item19, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item0.Add( item17, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    if set_sizer == True:
        parent.SetSizer( item0 )
        if call_fit == True:
            item0.SetSizeHints( parent )
    
    return item0

ID_COORDTYPE = 10009
ID_CALCBYRANGE = 10010
ID_RADIANSCB = 10011
ID_ZONENUM = 10012

def LatLonUTMDialog( parent, call_fit = True, set_sizer = True ):
    item0 = wx.BoxSizer( wx.VERTICAL )
    
    item1 = wx.BoxSizer( wx.HORIZONTAL )
    
    item2 = wx.RadioBox( parent, ID_COORDTYPE, "Coord Type", wx.DefaultPosition, wx.DefaultSize, 
        ["Lat/Lon","UTM"] , 1, wx.RA_SPECIFY_ROWS )
    item1.Add( item2, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item0.Add( item1, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item3 = wx.BoxSizer( wx.HORIZONTAL )
    
    item4 = wx.CheckBox( parent, ID_CALCBYRANGE, "Calculate using Range/Azimuth", wx.DefaultPosition, wx.DefaultSize, 0 )
    item4.SetToolTip( wx.ToolTip("Use the other Lat/Lon coordinate with range and azimuth to determine position") )
    item3.Add( item4, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item0.Add( item3, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item5 = wx.BoxSizer( wx.HORIZONTAL )
    
    item6 = wx.CheckBox( parent, ID_RADIANSCB, "Lat/Lon in Radians", wx.DefaultPosition, wx.DefaultSize, 0 )
    item5.Add( item6, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item0.Add( item5, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item7 = wx.BoxSizer( wx.HORIZONTAL )
    
    item8 = wx.StaticText( parent, ID_TEXT, "UTM Zone", wx.DefaultPosition, wx.DefaultSize, 0 )
    item7.Add( item8, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item9 = wx.SpinCtrl( parent, ID_ZONENUM, "8", wx.DefaultPosition, [60,-1], 0, 1, 60, 8 )
    item7.Add( item9, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item0.Add( item7, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item10 = wx.BoxSizer( wx.HORIZONTAL )
    
    item11 = wx.StaticText( parent, ID_TEXT, "Default value", wx.DefaultPosition, wx.DefaultSize, 0 )
    item10.Add( item11, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item12 = wx.TextCtrl( parent, ID_DEFAULTVAL, "", wx.DefaultPosition, [120,-1], 0 )
    item10.Add( item12, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item0.Add( item10, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item13 = wx.BoxSizer( wx.HORIZONTAL )
    
    item14 = wx.StaticText( parent, ID_TEXT, "modifier script", wx.DefaultPosition, wx.DefaultSize, 0 )
    item13.Add( item14, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item15 = wx.TextCtrl( parent, ID_SCRIPT, "", wx.DefaultPosition, [140,80], wx.TE_MULTILINE|wx.TE_PROCESS_TAB|wx.HSCROLL )
    item13.Add( item15, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item0.Add( item13, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item16 = wx.BoxSizer( wx.HORIZONTAL )
    
    item17 = wx.Button( parent, ID_OKBTN, "OK", wx.DefaultPosition, wx.DefaultSize, 0 )
    item16.Add( item17, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item18 = wx.Button( parent, ID_CANCELBTN, "CANCEL", wx.DefaultPosition, wx.DefaultSize, 0 )
    item16.Add( item18, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item0.Add( item16, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    if set_sizer == True:
        parent.SetSizer( item0 )
        if call_fit == True:
            item0.SetSizeHints( parent )
    
    return item0

ID_UNITCHOICE = 10013

def DepthUnitsDialog( parent, call_fit = True, set_sizer = True ):
    item0 = wx.BoxSizer( wx.VERTICAL )
    
    item1 = wx.BoxSizer( wx.HORIZONTAL )
    
    item2 = wx.StaticText( parent, ID_TEXT, "Bathy Units:", wx.DefaultPosition, wx.DefaultSize, 0 )
    item1.Add( item2, 0, wx.ALIGN_CENTER|wx.RIGHT, 5 )

    item3 = wx.Choice( parent, ID_UNITCHOICE, wx.DefaultPosition, [100,-1], 
        ["Feet","Meters","Fathoms"] , 0 )
    item3.SetName( "UnitChoice" )
    item1.Add( item3, 0, wx.ALIGN_CENTER, 5 )

    item0.Add( item1, 0, wx.ALIGN_CENTER|wx.ALL, 10 )

    item4 = wx.BoxSizer( wx.HORIZONTAL )
    
    item5 = wx.StaticText( parent, ID_TEXT, "Default value", wx.DefaultPosition, wx.DefaultSize, 0 )
    item4.Add( item5, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item6 = wx.TextCtrl( parent, ID_DEFAULTVAL, "", wx.DefaultPosition, [120,-1], 0 )
    item4.Add( item6, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item0.Add( item4, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item7 = wx.BoxSizer( wx.HORIZONTAL )
    
    item8 = wx.StaticText( parent, ID_TEXT, "modifier script", wx.DefaultPosition, wx.DefaultSize, 0 )
    item7.Add( item8, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item9 = wx.TextCtrl( parent, ID_SCRIPT, "", wx.DefaultPosition, [140,80], wx.TE_MULTILINE|wx.TE_PROCESS_TAB|wx.HSCROLL )
    item7.Add( item9, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item0.Add( item7, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item10 = wx.BoxSizer( wx.HORIZONTAL )
    
    item11 = wx.Button( parent, ID_OKBTN, "OK", wx.DefaultPosition, wx.DefaultSize, 0 )
    item10.Add( item11, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item12 = wx.Button( parent, ID_CANCELBTN, "CANCEL", wx.DefaultPosition, wx.DefaultSize, 0 )
    item10.Add( item12, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item0.Add( item10, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    if set_sizer == True:
        parent.SetSizer( item0 )
        if call_fit == True:
            item0.SetSizeHints( parent )
    
    return item0


def GeneralDialog( parent, call_fit = True, set_sizer = True ):
    item0 = wx.BoxSizer( wx.VERTICAL )
    
    item1 = wx.BoxSizer( wx.HORIZONTAL )
    
    item2 = wx.StaticText( parent, ID_TEXT, "Default value", wx.DefaultPosition, wx.DefaultSize, 0 )
    item1.Add( item2, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item3 = wx.TextCtrl( parent, ID_DEFAULTVAL, "", wx.DefaultPosition, [120,-1], 0 )
    item1.Add( item3, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item0.Add( item1, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item4 = wx.BoxSizer( wx.HORIZONTAL )
    
    item5 = wx.StaticText( parent, ID_TEXT, "modifier script", wx.DefaultPosition, wx.DefaultSize, 0 )
    item4.Add( item5, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item6 = wx.TextCtrl( parent, ID_SCRIPT, "", wx.DefaultPosition, [140,80], wx.TE_MULTILINE|wx.TE_PROCESS_TAB|wx.HSCROLL )
    item4.Add( item6, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item0.Add( item4, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item7 = wx.BoxSizer( wx.HORIZONTAL )
    
    item8 = wx.Button( parent, ID_OKBTN, "OK", wx.DefaultPosition, wx.DefaultSize, 0 )
    item7.Add( item8, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item9 = wx.Button( parent, ID_CANCELBTN, "CANCEL", wx.DefaultPosition, wx.DefaultSize, 0 )
    item7.Add( item9, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item0.Add( item7, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    if set_sizer == True:
        parent.SetSizer( item0 )
        if call_fit == True:
            item0.SetSizeHints( parent )
    
    return item0

# Menubar functions

# Toolbar functions

# Bitmap functions


# End of generated file
